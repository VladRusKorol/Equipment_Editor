// <auto-generated />
using System;
using Equipment_Editor.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Equipment_Editor.Migrations
{
    [DbContext(typeof(EquipmentContext))]
    partial class EquipmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Equipment_Editor.Models.Equipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("EntryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("InvNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ModelId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ModelId");

                    b.HasIndex("TypeId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment_Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipment_Models");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment_Repair", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Equipment_Repairs");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment_Repair_Trans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndDatetime")
                        .HasColumnType("TEXT");

                    b.Property<int>("EquipmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EquipmentRepairId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RepairComment")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("RepairDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartDatetime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("EquipmentRepairId");

                    b.ToTable("Equipment_Repair_Transes");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment_Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Equipment_Types");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment", b =>
                {
                    b.HasOne("Equipment_Editor.Models.Equipment_Model", "Model")
                        .WithMany("Equipments")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipment_Editor.Models.Equipment_Type", "Type")
                        .WithMany("Equipments")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Model");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment_Repair_Trans", b =>
                {
                    b.HasOne("Equipment_Editor.Models.Equipment", "Equipment")
                        .WithMany("Equipment_Repair_Transes")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Equipment_Editor.Models.Equipment_Repair", "EquipmentRepair")
                        .WithMany("Equipment_Repair_Transes")
                        .HasForeignKey("EquipmentRepairId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("EquipmentRepair");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment", b =>
                {
                    b.Navigation("Equipment_Repair_Transes");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment_Model", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment_Repair", b =>
                {
                    b.Navigation("Equipment_Repair_Transes");
                });

            modelBuilder.Entity("Equipment_Editor.Models.Equipment_Type", b =>
                {
                    b.Navigation("Equipments");
                });
#pragma warning restore 612, 618
        }
    }
}
